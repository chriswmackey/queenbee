{"title": "Workflow", "description": "Queenbee Workflow.\n\nA Workflow is a Baked Recipe with some arguments that will be used to execute the\nrecipe.", "type": "object", "properties": {"recipe": {"title": "Recipe", "description": "The baked recipe to be used by the execution engine to generate a workflow", "allOf": [{"$ref": "#/definitions/BakedRecipe"}]}, "labels": {"title": "Labels", "description": "Optional user data as a dictionary. User data is for user reference only and will not be used in the execution of the workflow.", "type": "object"}, "arguments": {"title": "Arguments", "description": "Input arguments for this workflow", "allOf": [{"$ref": "#/definitions/Arguments"}]}, "status": {"title": "Status", "description": "The status of the workflow", "allOf": [{"$ref": "#/definitions/WorkflowStatus"}]}}, "required": ["recipe"], "definitions": {"Maintainer": {"title": "Maintainer", "description": "Maintainer information", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the author/maintainer person or organization.", "type": "string"}, "email": {"title": "Email", "description": "The email address of the author/maintainer person or organization.", "type": "string"}}, "required": ["name"]}, "License": {"title": "License", "description": "License information for the Recipe", "type": "object", "properties": {"name": {"title": "Name", "description": "The license name used for the recipe.", "type": "string"}, "url": {"title": "Url", "description": "A URL to the license used for the recipe.", "type": "string"}}, "required": ["name"]}, "MetaData": {"title": "MetaData", "description": "Recipe metadata information.", "type": "object", "properties": {"name": {"title": "Name", "description": "Recipe name. Make it descriptive and helpful ;)", "type": "string"}, "tag": {"title": "Tag", "description": "The tag of the recipe", "type": "string"}, "keywords": {"title": "Keywords", "description": "A list of keywords to search the recipe by", "type": "array", "items": {"type": "string"}}, "maintainers": {"title": "Maintainers", "description": "A list of maintainers for the recipe", "type": "array", "items": {"$ref": "#/definitions/Maintainer"}}, "home": {"title": "Home", "description": "The URL of this recipe's home page", "type": "string"}, "sources": {"title": "Sources", "description": "A list of URLs to source code for this project", "type": "array", "items": {"type": "string"}}, "icon": {"title": "Icon", "description": "A URL to an SVG or PNG image to be used as an icon", "type": "string"}, "deprecated": {"title": "Deprecated", "description": "Whether this recipe is deprecated", "type": "boolean"}, "description": {"title": "Description", "description": "A description of what this recipe does", "type": "string"}, "license": {"title": "License", "description": "The license information.", "allOf": [{"$ref": "#/definitions/License"}]}}, "required": ["name", "tag"]}, "Dependency": {"title": "Dependency", "description": "Configuration to fetch a Recipe or Operator that another Recipe depends on.", "type": "object", "properties": {"type": {"title": "Type", "description": "The type of dependency", "enum": ["recipe", "operator"], "type": "string"}, "name": {"title": "Name", "description": "Workflow name. This name should be unique among all the resources in your resource. Use an alias if this is not the case.", "type": "string"}, "hash": {"title": "Hash", "description": "The digest hash of the dependency when retrieved from its source. This is locked when the resource dependencies are downloaded.", "type": "string"}, "alias": {"title": "Alias", "description": "An optional alias to refer to this dependency. Useful if the name is already used somewhere else.", "type": "string"}, "tag": {"title": "Tag", "description": "Tag of the resource.", "type": "string"}, "source": {"title": "Source", "description": "URL to a repository where this resource can be found.", "examples": ["https://registry.pollination.cloud/ladybugbot", "https://some-random-user.github.io/registry"], "type": "string"}}, "required": ["type", "name", "tag", "source"]}, "DAGInputParameter": {"title": "DAGInputParameter", "description": "An input parameter used within the DAG.", "type": "object", "properties": {"name": {"title": "Name", "description": "Name is the parameter name. must be unique within a task's inputs.", "type": "string"}, "default": {"title": "Default", "description": "Default value to use for an input parameter if a value was not supplied.", "type": "string"}, "description": {"title": "Description", "description": "Optional description for input parameter.", "type": "string"}, "required": {"title": "Required", "description": "Whether this value must be specified in a task argument.", "type": "boolean"}}, "required": ["name"]}, "HTTPSource": {"title": "HTTPSource", "description": "HTTPSource\n\nA web HTTP to an FTP server or an API for example.", "type": "object", "properties": {"type": {"title": "Type", "enum": ["http"]}, "url": {"title": "Url", "description": "For a HTTP endpoint this can be http://climate.onebuilding.org.", "type": "string"}}, "required": ["type", "url"]}, "S3Source": {"title": "S3Source", "description": "S3Source\n\nAn S3 bucket artifact Source.", "type": "object", "properties": {"type": {"title": "Type", "enum": ["s3"]}, "key": {"title": "Key", "description": "The path inside the bucket to source artifacts from.", "type": "string"}, "endpoint": {"title": "Endpoint", "description": "The HTTP endpoint to reach the S3 bucket.", "type": "string"}, "bucket": {"title": "Bucket", "description": "The name of the S3 bucket on the host server.", "type": "string"}, "credentials_path": {"title": "Credentials Path", "description": "Path to the file holding the AccessKey and SecretAccessKey to authenticate to the bucket. Assumes public bucket access if none are specified.", "type": "string"}}, "required": ["type", "key", "endpoint", "bucket"]}, "ProjectFolderSource": {"title": "ProjectFolderSource", "description": "Project Folder Source\n\nThis is the path to a folder where files and folders can be sourced. In the context\nof a desktop run Workflow this folder will correspond to a local folder. In the\ncontext of a workflow run on Pollination this folder will correspond to a Project\nscoped folder.", "type": "object", "properties": {"type": {"title": "Type", "enum": ["project-folder"]}, "path": {"title": "Path", "description": "For a local filesystem this can be \"C:\\Users\\me\\simulations\\test\". This will correspond to the run specific folder .", "type": "string"}}, "required": ["type"]}, "DAGInputArtifact": {"title": "DAGInputArtifact", "description": "An artifact used within the DAG.", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the artifact within the scope of the DAG", "type": "string"}, "description": {"title": "Description", "description": "Optional description for the input artifact", "type": "string"}, "default": {"title": "Default", "description": "If no artifact is specified then pull it from this source location.", "anyOf": [{"allOf": [{"$ref": "#/definitions/HTTPSource"}]}, {"allOf": [{"$ref": "#/definitions/S3Source"}]}, {"allOf": [{"$ref": "#/definitions/ProjectFolderSource"}]}]}, "required": {"title": "Required", "description": "Whether this value must be specified in a task argument.", "type": "boolean"}}, "required": ["name"]}, "DAGInputs": {"title": "DAGInputs", "description": "Inputs of a DAG.", "type": "object", "properties": {"parameters": {"title": "Parameters", "description": "A list of parameters the DAG will use as input values", "default": [], "type": "array", "items": {"$ref": "#/definitions/DAGInputParameter"}}, "artifacts": {"title": "Artifacts", "description": "A list of artifacts the DAG will use", "default": [], "type": "array", "items": {"$ref": "#/definitions/DAGInputArtifact"}}}}, "InputParameterReference": {"title": "InputParameterReference", "description": "An Input Parameter Reference", "type": "object", "properties": {"type": {"title": "Type", "default": "inputs", "enum": ["inputs"]}, "variable": {"title": "Variable", "description": "The name of the DAG input variable", "type": "string"}}, "required": ["variable"]}, "TaskParameterReference": {"title": "TaskParameterReference", "description": "A Task Parameter Reference", "type": "object", "properties": {"type": {"title": "Type", "default": "tasks", "enum": ["tasks"]}, "name": {"title": "Name", "description": "The name of the task to pull output data from", "type": "string"}, "variable": {"title": "Variable", "description": "The name of the task output variable", "type": "string"}}, "required": ["name", "variable"]}, "ItemParameterReference": {"title": "ItemParameterReference", "description": "An Item Parameter Reference", "type": "object", "properties": {"type": {"title": "Type", "default": "item", "enum": ["item"]}, "variable": {"title": "Variable", "description": "The name of the looped item variable (use dot notation for nested json values)", "type": "string"}}}, "DAGTaskParameterArgument": {"title": "DAGTaskParameterArgument", "description": "Input argument for a DAG task.\n\nThe name must correspond to an input parameter from the template function the task\nrefers to.", "type": "object", "properties": {"name": {"title": "Name", "description": "Name of the argument variable", "type": "string"}, "from": {"title": "From", "description": "The previous task or global workflow variable to pull this argument from", "anyOf": [{"allOf": [{"$ref": "#/definitions/InputParameterReference"}]}, {"allOf": [{"$ref": "#/definitions/TaskParameterReference"}]}, {"allOf": [{"$ref": "#/definitions/ItemParameterReference"}]}]}, "value": {"title": "Value", "description": "The fixed value for this task argument", "type": "string"}}, "required": ["name"]}, "InputArtifactReference": {"title": "InputArtifactReference", "description": "An Input Artifact Reference", "type": "object", "properties": {"type": {"title": "Type", "default": "inputs", "enum": ["inputs"]}, "variable": {"title": "Variable", "description": "The name of the DAG input variable", "type": "string"}}, "required": ["variable"]}, "TaskArtifactReference": {"title": "TaskArtifactReference", "description": "A Task Artifact Reference", "type": "object", "properties": {"type": {"title": "Type", "default": "tasks", "enum": ["tasks"]}, "name": {"title": "Name", "description": "The name of the task to pull output data from", "type": "string"}, "variable": {"title": "Variable", "description": "The name of the task output variable", "type": "string"}}, "required": ["name", "variable"]}, "DAGTaskArtifactArgument": {"title": "DAGTaskArtifactArgument", "description": "Input argument for a DAG task.\n\nThe name must correspond to an input artifact from the template function the task\nrefers to.", "type": "object", "properties": {"name": {"title": "Name", "description": "Name of the argument variable", "type": "string"}, "from": {"title": "From", "description": "The previous task or global workflow variable to pull this argument from", "anyOf": [{"allOf": [{"$ref": "#/definitions/InputArtifactReference"}]}, {"allOf": [{"$ref": "#/definitions/TaskArtifactReference"}]}]}, "subpath": {"title": "Subpath", "description": "Specify this value if your source artifact is a repository and you want to source an artifact from within that directory.", "type": "string"}}, "required": ["name", "from"]}, "DAGTaskArgument": {"title": "DAGTaskArgument", "description": "DAG task argument.\n\nThese arguments should match the inputs from the template referenced in the task.", "type": "object", "properties": {"parameters": {"title": "Parameters", "description": "A list of input parameters to pass to the task", "default": [], "type": "array", "items": {"$ref": "#/definitions/DAGTaskParameterArgument"}}, "artifacts": {"title": "Artifacts", "description": "A list of input artifacts to pass to the task", "default": [], "type": "array", "items": {"$ref": "#/definitions/DAGTaskArtifactArgument"}}}}, "LoopControl": {"title": "LoopControl", "description": "Loop Control", "type": "object", "properties": {"key": {"title": "Key", "description": "The loop control key determines how parameters and artifacts from a looped task can be identified", "type": "string"}}}, "DAGTaskLoop": {"title": "DAGTaskLoop", "description": "Loop configuration for the task.\n\nThis will run the template provided multiple times and in parallel relative to an\ninput or task parameter which should be a list.", "type": "object", "properties": {"from": {"title": "From", "description": "The task or DAG parameter to loop over (must be iterable).", "anyOf": [{"allOf": [{"$ref": "#/definitions/InputParameterReference"}]}, {"allOf": [{"$ref": "#/definitions/TaskParameterReference"}]}]}, "value": {"title": "Value", "description": "A list of values or JSON objects to loop over.", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}, {"type": "number"}, {"type": "object"}]}}, "control": {"title": "Control", "description": "Parameters to control some loop behavior for this task", "allOf": [{"$ref": "#/definitions/LoopControl"}]}}}, "DAGTaskOutputParameter": {"title": "DAGTaskOutputParameter", "description": "Output parameter for a DAG task.\n\nThe name must correspond to an output parameter from the template function the task\nrefers to.", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the output variable", "type": "string"}}, "required": ["name"]}, "DAGTaskOutputArtifact": {"title": "DAGTaskOutputArtifact", "description": "Output artifact for a DAG task.\n\nThe name must correspond to an output artifact from the template function the task\nrefers to.", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the output variable", "type": "string"}, "path": {"title": "Path", "description": "The path where the artifact should be saved relative to the DAG folder.", "type": "string"}}, "required": ["name"]}, "DAGTaskOutputs": {"title": "DAGTaskOutputs", "description": "These outputs should match the outputs from the template referenced in the task", "type": "object", "properties": {"parameters": {"title": "Parameters", "description": "A list of output parameters to expose from the task", "default": [], "type": "array", "items": {"$ref": "#/definitions/DAGTaskOutputParameter"}}, "artifacts": {"title": "Artifacts", "description": "A list of output artifacts to expose from the task", "default": [], "type": "array", "items": {"$ref": "#/definitions/DAGTaskOutputArtifact"}}}}, "DAGTask": {"title": "DAGTask", "description": "The instance of a function template matched with DAG inputs and outputs.", "type": "object", "properties": {"name": {"title": "Name", "description": "Name for this step. It must be unique in DAG.", "type": "string"}, "template": {"title": "Template", "description": "Template name.", "type": "string"}, "arguments": {"title": "Arguments", "description": "The input arguments for this task", "allOf": [{"$ref": "#/definitions/DAGTaskArgument"}]}, "dependencies": {"title": "Dependencies", "description": "Dependencies are name of other DAG steps which this depends on.", "type": "array", "items": {"type": "string"}}, "loop": {"title": "Loop", "description": "List of inputs to loop over.", "allOf": [{"$ref": "#/definitions/DAGTaskLoop"}]}, "sub_folder": {"title": "Sub Folder", "description": "A path relative to the current folder context where artifacts should be saved. This is useful when performing a loop or invoking another workflow and wanting to save results in a specific folder.", "type": "string"}, "outputs": {"title": "Outputs", "description": "The outputs of this task", "allOf": [{"$ref": "#/definitions/DAGTaskOutputs"}]}}, "required": ["name", "template"]}, "DAGOutputParameter": {"title": "DAGOutputParameter", "description": "A parameter sourced from within the DAG that is exposed as an output.", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the output variable", "type": "string"}, "from": {"title": "From", "description": "The task reference to pull this output variable from. Note, this must be an output variable.", "allOf": [{"$ref": "#/definitions/TaskParameterReference"}]}}, "required": ["name", "from"]}, "DAGOutputArtifact": {"title": "DAGOutputArtifact", "description": "An artifact sourced from within the DAG that is exposed as an output", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the output variable", "type": "string"}, "from": {"title": "From", "description": "The task reference to pull this output variable from. Note, this must be an output variable.", "allOf": [{"$ref": "#/definitions/TaskArtifactReference"}]}}, "required": ["name", "from"]}, "DAGOutputs": {"title": "DAGOutputs", "description": "Artifacts and Parameters exposed by the DAG", "type": "object", "properties": {"parameters": {"title": "Parameters", "description": "A list of output parameters exposed by this DAG", "default": [], "type": "array", "items": {"$ref": "#/definitions/DAGOutputParameter"}}, "artifacts": {"title": "Artifacts", "description": "A list of output artifacts exposed by this DAG", "default": [], "type": "array", "items": {"$ref": "#/definitions/DAGOutputArtifact"}}}}, "DAG": {"title": "DAG", "description": "A Directed Acyclic Graph containing a list of tasks.", "type": "object", "properties": {"name": {"title": "Name", "description": "A unique name for this dag.", "type": "string"}, "inputs": {"title": "Inputs", "description": "Inputs for the DAG.", "allOf": [{"$ref": "#/definitions/DAGInputs"}]}, "fail_fast": {"title": "Fail Fast", "description": "Stop scheduling new steps, as soon as it detects that one of the DAG nodes is failed. Default is True.", "default": true, "type": "boolean"}, "tasks": {"title": "Tasks", "description": "Tasks are a list of DAG steps", "type": "array", "items": {"$ref": "#/definitions/DAGTask"}}, "outputs": {"title": "Outputs", "description": "Outputs of the DAG that can be used by other DAGs", "allOf": [{"$ref": "#/definitions/DAGOutputs"}]}}, "required": ["name", "tasks"]}, "FunctionParameterIn": {"title": "FunctionParameterIn", "description": "A Function Parameter\n\nParameter indicate a passed string parameter to a service template with an optional\ndefault value.", "type": "object", "properties": {"name": {"title": "Name", "description": "Name is the parameter name. must be unique within a task's inputs.", "type": "string"}, "default": {"title": "Default", "description": "Default value to use for an input parameter if a value was not supplied.", "type": "string"}, "description": {"title": "Description", "description": "Optional description for input parameter.", "type": "string"}, "required": {"title": "Required", "description": "Whether this value must be specified in a task argument.", "type": "boolean"}}, "required": ["name"]}, "FunctionArtifact": {"title": "FunctionArtifact", "description": "A Function Artifact object\n\nThis indicates the path within the function context at which a certain file or folder\n(ie: artifact) can be found.", "type": "object", "properties": {"name": {"title": "Name", "description": "Name of the artifact. Must be unique within a task's inputs / outputs.", "type": "string"}, "description": {"title": "Description", "description": "Optional description for input parameter.", "type": "string"}, "path": {"title": "Path", "description": "Path to the artifact relative to the working directory where the command is executed.", "type": "string"}}, "required": ["name", "path"]}, "FunctionInputs": {"title": "FunctionInputs", "description": "The Inputs of a Function", "type": "object", "properties": {"parameters": {"title": "Parameters", "default": [], "type": "array", "items": {"$ref": "#/definitions/FunctionParameterIn"}}, "artifacts": {"title": "Artifacts", "default": [], "type": "array", "items": {"$ref": "#/definitions/FunctionArtifact"}}}}, "FunctionParameterOut": {"title": "FunctionParameterOut", "description": "A Function Artifact object\n\nThis indicates the path within the function context at which a certain file or folder\n(ie: artifact) can be found.", "type": "object", "properties": {"name": {"title": "Name", "description": "Name of the artifact. Must be unique within a task's inputs / outputs.", "type": "string"}, "description": {"title": "Description", "description": "Optional description for input parameter.", "type": "string"}, "path": {"title": "Path", "description": "Path to the artifact relative to the working directory where the command is executed.", "type": "string"}}, "required": ["name", "path"]}, "FunctionOutputs": {"title": "FunctionOutputs", "description": "The Outputs of a Function", "type": "object", "properties": {"parameters": {"title": "Parameters", "default": [], "type": "array", "items": {"$ref": "#/definitions/FunctionParameterOut"}}, "artifacts": {"title": "Artifacts", "default": [], "type": "array", "items": {"$ref": "#/definitions/FunctionArtifact"}}}}, "DockerConfig": {"title": "DockerConfig", "description": "Operator Configuration to run in a Docker container", "type": "object", "properties": {"image": {"title": "Image", "description": "Docker image name. Must include tag.", "type": "string"}, "registry": {"title": "Registry", "description": "The container registry URLs that this container should be pulled from. Will default to Dockerhub if none is specified.", "type": "string"}, "workdir": {"title": "Workdir", "description": "The working directory the entrypoint command of the container runsin. This is used to determine where to load artifacts when running in the container.", "type": "string"}}, "required": ["image", "workdir"]}, "LocalConfig": {"title": "LocalConfig", "description": "Operator Configuration to run on a desktop.", "type": "object", "properties": {}}, "Config": {"title": "Config", "description": "Operator configuration.\n\nThe config is used to schedule functions on a desktop or in other contexts\n(ie: Docker).", "type": "object", "properties": {"docker": {"title": "Docker", "description": "The configuration to use this operator in a docker container", "allOf": [{"$ref": "#/definitions/DockerConfig"}]}, "local": {"title": "Local", "description": "The configuration to use this operator locally", "allOf": [{"$ref": "#/definitions/LocalConfig"}]}}, "required": ["docker"]}, "TemplateFunction": {"title": "TemplateFunction", "description": "Function template.", "type": "object", "properties": {"name": {"title": "Name", "description": "Function name. Must be unique within an operator.", "type": "string"}, "description": {"title": "Description", "description": "Function description. A short human readable description for this function.", "type": "string"}, "inputs": {"title": "Inputs", "description": "Input arguments for this function.", "default": {"parameters": [], "artifacts": []}, "allOf": [{"$ref": "#/definitions/FunctionInputs"}]}, "command": {"title": "Command", "description": "Full shell command for this function. Each function accepts only one command. The command will be executed as a shell command in operator. For running several commands after each other use && between the commands or pipe data from one to another using |", "type": "string"}, "outputs": {"title": "Outputs", "description": "List of output arguments.", "default": {"parameters": [], "artifacts": []}, "allOf": [{"$ref": "#/definitions/FunctionOutputs"}]}, "config": {"title": "Config", "description": "The operator config to use for this function", "allOf": [{"$ref": "#/definitions/Config"}]}}, "required": ["name", "command", "config"]}, "BakedRecipe": {"title": "BakedRecipe", "description": "Baked Recipe.\n\nA Baked Recipe contains all the templates referred to in the DAG within a templates\nlist.", "type": "object", "properties": {"metadata": {"title": "Metadata", "description": "Recipe metadata information.", "allOf": [{"$ref": "#/definitions/MetaData"}]}, "dependencies": {"title": "Dependencies", "description": "A list of operators and other recipes this recipe depends on.", "type": "array", "items": {"$ref": "#/definitions/Dependency"}}, "flow": {"title": "Flow", "description": "A list of tasks to create a DAG recipe.", "type": "array", "items": {"$ref": "#/definitions/DAG"}}, "digest": {"title": "Digest", "type": "string"}, "templates": {"title": "Templates", "description": "A list of templates. Templates can be Function or a DAG.", "type": "array", "items": {"anyOf": [{"$ref": "#/definitions/TemplateFunction"}, {"$ref": "#/definitions/DAG"}]}}}, "required": ["flow", "digest", "templates"]}, "ArgumentParameter": {"title": "ArgumentParameter", "description": "A workflow Parameter Argument", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the parameter", "type": "string"}, "value": {"title": "Value", "description": "The value of the parameter", "type": "string"}}, "required": ["name", "value"]}, "ArgumentArtifact": {"title": "ArgumentArtifact", "description": "A workflow Artifact Argument", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the artifact", "type": "string"}, "source": {"title": "Source", "description": "The source to pull the artifact from", "anyOf": [{"allOf": [{"$ref": "#/definitions/HTTPSource"}]}, {"allOf": [{"$ref": "#/definitions/S3Source"}]}, {"allOf": [{"$ref": "#/definitions/ProjectFolderSource"}]}]}}, "required": ["name", "source"]}, "Arguments": {"title": "Arguments", "description": "Workflow Arguments", "type": "object", "properties": {"parameters": {"title": "Parameters", "description": "A list of input parameters", "default": [], "type": "array", "items": {"$ref": "#/definitions/ArgumentParameter"}}, "artifacts": {"title": "Artifacts", "description": "A list of input artifacts", "default": [], "type": "array", "items": {"$ref": "#/definitions/ArgumentArtifact"}}}}, "TaskStatus": {"title": "TaskStatus", "description": "The Status of a Workflow Task", "type": "object", "properties": {"status": {"title": "Status", "description": "The status of this task. Can be \"Running\", \"Succeeded\", \"Failed\" or \"Error\"", "type": "string"}, "message": {"title": "Message", "description": "Any message produced by the task. Usually error/debugging hints.", "type": "string"}, "started_at": {"title": "Started At", "description": "The time at which the task was started", "type": "string", "format": "date-time"}, "finished_at": {"title": "Finished At", "description": "The time at which the task was completed", "type": "string", "format": "date-time"}, "id": {"title": "Id", "description": "The task unique ID", "type": "string"}, "name": {"title": "Name", "description": "A human readable name for the task. Usually defined by the DAG task name but can be extended if the task is part of a loop for example. This name is unique within the boundary of the DAG/Workflow that generated it.", "type": "string"}, "type": {"title": "Type", "description": "The type of task this status is for. Can be \"function\", \"dag\" or \"loop\"", "enum": ["function", "dag", "loop"], "type": "string"}, "template_ref": {"title": "Template Ref", "description": "The name of the template that spawned this task", "type": "string"}, "command": {"title": "Command", "description": "The command used to run this task. Only applies to Function tasks.", "type": "string"}, "inputs": {"title": "Inputs", "description": "The inputs used by this task", "allOf": [{"$ref": "#/definitions/Arguments"}]}, "outputs": {"title": "Outputs", "description": "The outputs produced by this task", "allOf": [{"$ref": "#/definitions/Arguments"}]}, "boundary_id": {"title": "Boundary Id", "description": "This indicates the task ID of the associated template root             task in which this task belongs to. A DAG task will have the id of the             parent DAG for example.", "type": "string"}, "children": {"title": "Children", "description": "A list of child task IDs", "type": "array", "items": {"type": "string"}}, "outbound_tasks": {"title": "Outbound Tasks", "description": "A list of the last tasks to ran in the context of this task. In the case of a DAG or a workflow this will be the last task that has been executed. It will remain empty for functions.", "type": "array", "items": {"type": "string"}}}, "required": ["status", "started_at", "id", "name", "type", "template_ref", "inputs", "outputs", "children", "outbound_tasks"]}, "WorkflowStatus": {"title": "WorkflowStatus", "description": "Workflow Status", "type": "object", "properties": {"status": {"title": "Status", "description": "The status of this task. Can be \"Running\", \"Succeeded\", \"Failed\" or \"Error\"", "type": "string"}, "message": {"title": "Message", "description": "Any message produced by the task. Usually error/debugging hints.", "type": "string"}, "started_at": {"title": "Started At", "description": "The time at which the task was started", "type": "string", "format": "date-time"}, "finished_at": {"title": "Finished At", "description": "The time at which the task was completed", "type": "string", "format": "date-time"}, "id": {"title": "Id", "description": "The ID of the individual workflow run.", "type": "string"}, "entrypoint": {"title": "Entrypoint", "description": "The ID of the first task in the workflow", "type": "string"}, "tasks": {"title": "Tasks", "default": {}, "type": "object", "additionalProperties": {"$ref": "#/definitions/TaskStatus"}}}, "required": ["status", "started_at", "id"]}}}